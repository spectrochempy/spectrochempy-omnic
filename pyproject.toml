[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=64", "setuptools-scm>=8", "wheel"]

[project]
authors = [
  {name = "Arnaud Travert", email = "contact@spectrochempy.fr"},
  {name = "Christian Fernandez", email = "contact@spectrochempy.fr"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Topic :: Utilities",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries",
  "Intended Audience :: Science/Research",
  "License :: CeCILL-B Free Software License Agreement (CECILL-B)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "numpy",
  "setuptools-scm",
]
description = "SpectroChemPy OMNIC file reader"
dynamic = ["version"]
keywords = ["spectroscopy"]
license = {text = "CeCILL-B FREE SOFTWARE LICENSE AGREEMENT"}
name = "spectrochempy-omnic"
readme = "README.md"
requires-python = ">=3.10"

[project.optional-dependencies]
build = ["setuptools", "setuptools_scm", "toml", "jinja2", "anaconda-client"]
dev = ["spectrochempy[dev]"]
test = [
  "requests",
  "pytest",
  "pytest-doctestplus",
  "pytest-ruff",
]
[project.urls]
issues = "https://github.com/spectrochempy/spectrochempy-omnic/issues"
repository = "https://github.com/spectrochempy/spectrochempy-omnic"

[project.scripts]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]

[tool.setuptools_scm]
local_scheme = "dirty-tag"

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
# Enable specific rules
ignore = [
  "E402", # Module level import not at top of file
  "E501", # Line too long
  "E731", # Do not assign a lambda expression
  "N801", # Class name should use CapWords convention
  "N802", # Function name should be lowercase
  "N803", # Argument name should be lowercase
  "N805", # First argument of a method should be named 'self'
  "N806", # Variable in function should be lowercase
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing doctring in public package
  "D105", # Missing docstring in magic method
  "D107", # Missing docstring in __init__
  "D202", # No blank lines allowed after function docstring
  "D203", # Incorrect blank line before class
  "D212", # Docstring should start on first line
  "D413", # Missing blank line after last section
  "D417", # Missing argument descriptions in the docstring
]
select = [
  "D", # pydocstyle
  "E", # pycodestyle errors
  "F", # pyflakes
  "I", # isort
  "N", # pep8-naming
  "UP", # pyupgrade
  "S", # bandit
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "T20", # flake8-print
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "W", # pycodestyle warnings  # "PERF", # perflint
  "PLC", # pylint conventions
  "TID252", # absolute imports
]

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
force-single-line = true

[tool.pytest.ini_options]
addopts = ["--ignore=~*", "--doctest-plus", "-p no:warnings"]
doctest_optionflags = [
  "ELLIPSIS",
  "NORMALIZE_WHITESPACE",
  "IGNORE_EXCEPTION_DETAIL",
  "ALLOW_UNICODE",
  "ALLOW_BYTES",
]
doctest_plus = "enabled"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src/spectrochempy-omnic/"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "'# '",
  "if self.debug:",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "def __repr__",
  "if settings.DEBUG",
]
ignore_errors = true
